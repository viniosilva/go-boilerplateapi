services:
  api:
    container_name: go-boilerplate_api
    build:
      context: .
      dockerfile: build/Dockerfile.dev
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      IB_ENV: docker
    ports:
      - "8000:8000"
    volumes:
      - .:/app

  db:
    image: postgres:17-alpine
    container_name: go-boilerplate_db
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
  
  migrate:
    image: migrate/migrate
    container_name: go-boilerplate_migrate
    volumes:
      - ./internal/infrastructure/migrations:/migrations
    entrypoint: [ "migrate" ]
    depends_on:
      db:
        condition: service_healthy

volumes:
  pgdata: